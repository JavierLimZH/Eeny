Demux_1bit {
    // input nodes
    Write0 1: C;
    Write1 2: C;
    DemuxI 2: C;
    ResetI 5: C;

    // reset loop
    ResetResetO 5: C;
    ResetSig0 4: C;
    ResetSig1 3 : C;
    ResetDemux0 2: C;
    ResetDemux1 1: C;

    // central counter 
    C:  
        Sig0 
        Sig1 
        Demux0 
        Demux1 

        ResetResetO
        ResetSig0
        ResetSig1
        ResetDemux0
        ResetDemux1

        ResetO;

    // terminal nodes
    Sig0;
    Sig1;
    Demux0;
    Demux1;
    ResetO;
}

AutomataCell1D {
    Demux1 = Demux_1bit;
    Demux2 = Demux_1bit;
    Demux3 = Demux_1bit;
    Demux4 = Demux_1bit;
    Demux5 = Demux_1bit;
    Demux6 = Demux_1bit;
    Demux7 = Demux_1bit;

    // connect write chain (blue)
    Write0: Demux1.Write0;
    Demux1.Sig0: Demux2.Write0;
    Demux2.Sig0: Demux3.Write0;
    Demux3.Sig0: Demux4.Write0;
    Demux4.Sig0: Demux5.Write0;
    Demux5.Sig0: Demux6.Write0;
    Demux6.Sig0: Demux7.Write0;
    Demux7.Sig0: Sig0;
    Sig0;

    Write1: Demux1.Write1;
    Demux1.Sig1: Demux2.Write1;
    Demux2.Sig1: Demux3.Write1;
    Demux3.Sig1: Demux4.Write1;
    Demux4.Sig1: Demux5.Write1;
    Demux5.Sig1: Demux6.Write1;
    Demux6.Sig1: Demux7.Write1;
    Demux7.Sig1: Sig1;
    Sig1;

    // connect rule set (pink)
    Demux4.Demux0: Zero;
    Demux4.Demux1: One;
    Demux5.Demux0: One;
    Demux5.Demux1: One;
    Demux6.Demux0: Zero;
    Demux6.Demux1: One;
    Demux7.Demux0: One;
    Demux7.Demux1: Zero;
    One;
    Zero;

    // connect reset chain
    ResetI: Demux1.ResetI;
    Demux1.ResetO: Demux2.ResetI;
    Demux2.ResetO: Demux3.ResetI;
    Demux3.ResetO: Demux4.ResetI;
    Demux4.ResetO: Demux5.ResetI;
    Demux5.ResetO: Demux6.ResetI;
    Demux6.ResetO: Demux7.ResetI;
    Demux7.ResetO: ResetO;
    ResetO;

    // expose write signal sink
    Demux7.Sig0: Sig0;
    Demux7.Sig1: Sig1;
    Sig0;
    Sig1;

    DemuxI: Demux1.DemuxI;
}
